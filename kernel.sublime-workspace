{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"kernel",
				"kernel_test_idt"
			],
			[
				"gt",
				"gdt_entry"
			],
			[
				"regi",
				"registers_t"
			],
			[
				"ISR",
				"ISR_ERROR_CODE"
			],
			[
				"ISR_",
				"ISR_NO_ERROR_CODE"
			],
			[
				"stack_st",
				"stack_state_t"
			],
			[
				"com",
				"com"
			],
			[
				"idt_ent",
				"idt_entry_t"
			],
			[
				"vga_m",
				"vga_make_entry"
			],
			[
				"term_",
				"term_putstring"
			],
			[
				"kere",
				"kernel_main"
			],
			[
				"ent_sea",
				"ent_search_keypress"
			],
			[
				"traffi",
				"TrafficLight"
			],
			[
				"Tra",
				"TrafficLight"
			],
			[
				"DRAW_IN",
				"DRAW_INTERVAL_CHANGE"
			],
			[
				"DRAW",
				"FLASH_DRAW_INTERVAL"
			],
			[
				"R",
				"R64_CHAR_START"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/vga.c",
			"settings":
			{
				"buffer_size": 4174,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/kernel.c",
			"settings":
			{
				"buffer_size": 528,
				"line_ending": "Unix"
			}
		},
		{
			"file": "inc/sys/vga.h",
			"settings":
			{
				"buffer_size": 985,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/str.c",
			"settings":
			{
				"buffer_size": 167,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/isr.c",
			"settings":
			{
				"buffer_size": 505,
				"line_ending": "Unix"
			}
		},
		{
			"file": "inc/sys/gdt.h",
			"settings":
			{
				"buffer_size": 418,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/gdt.c",
			"settings":
			{
				"buffer_size": 935,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/gdt.s",
			"settings":
			{
				"buffer_size": 259,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/idt.s",
			"settings":
			{
				"buffer_size": 1080,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/idt.c",
			"settings":
			{
				"buffer_size": 2151,
				"line_ending": "Unix"
			}
		},
		{
			"file": "inc/sys/idt.h",
			"settings":
			{
				"buffer_size": 1177,
				"line_ending": "Unix"
			}
		},
		{
			"file": "inc/sys/isr.h",
			"settings":
			{
				"buffer_size": 452,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/kernel.sublime-build",
	"command_palette":
	{
		"height": 227.0,
		"selected_items":
		[
			[
				"delete",
				"ANF: Delete File"
			],
			[
				"rename",
				"ANF: Rename File"
			],
			[
				"move",
				"File: Move"
			],
			[
				"deelte cur",
				"ANF: Delete Current File"
			],
			[
				"",
				"ANF: Copy Current File"
			],
			[
				"mov",
				"File: Move"
			],
			[
				"syn c",
				"Set Syntax: C"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"syn c9",
				"Set Syntax: C99"
			],
			[
				"rema",
				"Emmet: Remove Tag"
			],
			[
				"assembly",
				"Set Syntax: Assembly x86 (MASM compatible)"
			],
			[
				"syn assem",
				"Set Syntax: Assembly x86 (MASM compatible)"
			],
			[
				"syn assembl",
				"Set Syntax: Assembly x86 (MASM compatible)"
			],
			[
				"anf",
				"ANF: New File"
			],
			[
				"rena",
				"ANF: Rename File"
			],
			[
				"delee",
				"File: Delete"
			],
			[
				"del",
				"File: Delete"
			],
			[
				"syn ass",
				"Set Syntax: ARM Assembly"
			]
		],
		"width": 457.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/cameron/code/c/barebones_kernel",
		"/home/cameron/code/c/barebones_kernel/inc/sys",
		"/home/cameron/code/c/barebones_kernel/src"
	],
	"file_history":
	[
		"/home/cameron/code/c/barebones_kernel/iso/boot/grub/grub.cfg",
		"/home/cameron/code/c/barebones_kernel/Makefile",
		"/home/cameron/code/c/barebones_kernel/bochsrc",
		"/home/cameron/code/c/barebones_kernel/link.ld",
		"/home/cameron/code/c/barebones_kernel/src/boot.s",
		"/home/cameron/code/c/barebones_kernel/inc/str.h",
		"/home/cameron/code/c/barebones_kernel/src/pic.c",
		"/home/cameron/code/c/barebones_kernel/inc/sys/pic.h",
		"/home/cameron/code/c/barebones_kernel/inc/sys/io.h",
		"/home/cameron/code/c/barebones_kernel/inc/int.h",
		"/home/cameron/code/c/barebones_kernel/inc/arg.h",
		"/home/cameron/code/c/barebones_kernel/build_cross_compiler.sh",
		"/home/cameron/code/c/barebones_kernel/kernel",
		"/home/cameron/code/c/barebones_kernel/inc/stdarg.h",
		"/home/cameron/code/c/barebones_kernel/inc/sys/isr.h",
		"/home/cameron/code/c/barebones_kernel/src/isr.c",
		"/home/cameron/code/c/barebones_kernel/src/idt.c",
		"/home/cameron/code/c/barebones_kernel/src/kernel.c",
		"/home/cameron/code/c/barebones_kernel/src/idt.s",
		"/home/cameron/code/c/barebones_kernel/inc/sys/idt.h",
		"/home/cameron/code/c/barebones_kernel/run.sh",
		"/home/cameron/code/c/barebones_kernel/inc/sys/gtd.h",
		"/home/cameron/code/c/barebones_kernel/src/str.c",
		"/home/cameron/code/c/barebones_kernel/src/io.s",
		"/home/cameron/code/c/barebones_kernel/src/vga.c",
		"/home/cameron/code/c/barebones_kernel/inc/sys/vga.h",
		"/home/cameron/code/c/barebones_kernel/src/isr.s",
		"/home/cameron/code/c/barebones_kernel/inc/sys/int.h",
		"/home/cameron/code/c/barebones_kernel/tmp/idt.h",
		"/home/cameron/code/c/barebones_kernel/src/int.h",
		"/home/cameron/code/c/barebones_kernel/lib/string.h",
		"/home/cameron/code/c/barebones_kernel/src/vga.h",
		"/home/cameron/code/c/barebones_kernel/src/kbd.c",
		"/home/cameron/code/c/barebones_kernel/src/kbd.h",
		"/home/cameron/code/c/barebones_kernel/src/idt.h",
		"/home/cameron/code/c/barebones_kernel/src/isr_handlers.s",
		"/home/cameron/code/c/barebones_kernel/isr.c",
		"/home/cameron/code/c/barebones_kernel/src/pic.h",
		"/home/cameron/code/c/barebones_kernel/isr.s",
		"/home/cameron/code/c/barebones_kernel/src/interrupts.s",
		"/home/cameron/code/c/barebones_kernel/src/gdt.s",
		"/home/cameron/code/c/barebones_kernel/src/gdt.h",
		"/home/cameron/code/c/barebones_kernel/gdt.h",
		"/home/cameron/code/c/barebones_kernel/src/io.h",
		"/home/cameron/code/c/barebones_kernel/src/serial.h",
		"/home/cameron/code/c/barebones_kernel/src/serial.c",
		"/home/cameron/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/cameron/code/c/barebones_kernel/serial.h",
		"/home/cameron/code/c/barebones_kernel/src/io.c",
		"/home/cameron/code/c/barebones_kernel/src/common.h",
		"/home/cameron/code/c/barebones_kernel/src/common.c",
		"/home/cameron/code/c/barebones_kernel/src/types.h",
		"/home/cameron/code/c/barebones_kernel/obj/idt.o",
		"/home/cameron/code/c/barebones_kernel/obj/boot.o",
		"/home/cameron/code/c/barebones_kernel/obj/kernel.o",
		"/home/cameron/code/c/barebones_kernel/io.h",
		"/home/cameron/code/c/barebones_kernel/idt.c",
		"/home/cameron/code/c/barebones_kernel/idt.h",
		"/home/cameron/code/c/barebones_kernel/kbd.c",
		"/home/cameron/code/c/barebones_kernel/kbd.h",
		"/home/cameron/code/c/barebones_kernel/src/link.ld",
		"/home/cameron/code/c/barebones_kernel/vga.c",
		"/home/cameron/code/c/barebones_kernel/iso/boot/grub/menu.lst",
		"/home/cameron/code/c/barebones_kernel/kernel.c",
		"/home/cameron/code/c/barebones_kernel/boot.s",
		"/home/cameron/code/c/barebones_kernel/build.sh",
		"/home/cameron/code/c/barebones_kernel/make.sh",
		"/home/cameron/code/c/barebones_kernel/bochsrc.txt",
		"/home/cameron/code/c/barebones_kernel/loader.s",
		"/home/cameron/code/c/barebones_kernel/old_link.ld",
		"/home/cameron/code/c/barebones_kernel/test.c",
		"/home/cameron/code/c/barebones_kernel/types.h",
		"/home/cameron/code/c/barebones_kernel/start.asm",
		"/home/cameron/code/c/barebones_kernel/include/../types.h",
		"/home/cameron/code/c/barebones_kernel/include/idt.h",
		"/home/cameron/code/c/barebones_kernel/include/system.h",
		"/home/cameron/code/c/barebones_kernel/include/gdt.h",
		"/home/cameron/code/c/barebones_kernel/kernel.c.bak",
		"/home/cameron/code/c/barebones_kernel/grub.cfg",
		"/home/cameron/code/c/barebones_kernel/include/system.sh",
		"/home/cameron/code/c/barebones_kernel/boot.o",
		"/home/cameron/code/c/barebones_kernel/boot.asm",
		"/home/cameron/code/c/barebones_kernel/cleancc.sh",
		"/home/cameron/code/c/barebones_kernel/buildcc.sh",
		"/home/cameron/code/c/barebones_kernel/kernel.in",
		"/home/cameron/code/c/barebones_kernel/iso/boot/kernel.bin",
		"/home/cameron/.config/sublime-text-3/Packages/User/kernel.sublime-build",
		"/home/cameron/code/c/fs/fs.c",
		"/home/cameron/code/c/fs/fs.h",
		"/home/cameron/code/fs.c",
		"/home/cameron/code/c/fs/test.c",
		"/home/cameron/code/c/test.c",
		"/home/cameron/code/python/misc/test.py",
		"/home/cameron/code/c/hash_table/hashtable.c",
		"/home/cameron/code/python/misc/string_match_1.py",
		"/home/cameron/code/c/linux/fs/exec.c",
		"/home/cameron/code/c/linux/lib/errno.c",
		"/home/cameron/code/c/linux/drivers/FPU-emu/errors.c",
		"/home/cameron/code/python/school/battleships.py",
		"/home/cameron/code/c/test.dat",
		"/home/cameron/code/c/test.dat.idx",
		"/home/cameron/code/c/linux/drivers/net/eexpress.c",
		"/home/cameron/code/node/chat/node_modules/express/node_modules/methods/test/methods.js",
		"/home/cameron/code/node/chat/node_modules/express/node_modules/type-is/node_modules/mime-types/LICENSE",
		"/home/cameron/code/c/linux/fs/ext/freelists.c",
		"/home/cameron/.bashrc",
		"/home/cameron/.profile",
		"/home/cameron/code/c/base64/test.c",
		"/home/cameron/code/c/base64/test",
		"/home/cameron/code/c/linux/fs/proc/base.c",
		"/home/cameron/code/c/linux/fs/ext2/balloc.c",
		"/home/cameron/code/asm/bootloader1.asm",
		"/home/cameron/code/c/linux/Makefile",
		"/home/cameron/code/python/misc/dp_challenge_178_intermediate.txt",
		"/home/cameron/code/c/hash_table/hashtable.h",
		"/home/cameron/code/c/hash_table/test.c",
		"/home/cameron/code/c/misc/htable.c",
		"/home/cameron/code/c/misc/htable",
		"/home/cameron/code/c/linux/include/linux/tasks.h",
		"/home/cameron/code/python/school/traffic_lights_tk.py",
		"/home/cameron/code/python/tkinter/search.py",
		"/home/cameron/code/node/chat/node_modules/express/node_modules/vary/History.md",
		"/home/cameron/code/node/chat/node_modules/express/node_modules/path-to-regexp/History.md",
		"/home/cameron/code/node/chat/node_modules/express/node_modules/media-typer/HISTORY.md",
		"/home/cameron/code/node/chat/node_modules/express/node_modules/finalhandler/HISTORY.md",
		"/home/cameron/code/node/chat/node_modules/express/node_modules/depd/History.md",
		"/home/cameron/code/node/chat/node_modules/express/node_modules/debug/History.md",
		"/home/cameron/code/node/chat/node_modules/express/node_modules/range-parser/History.md"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 95.0,
		"where_history":
		[
			"/home/cameron/code/c/barebones_kernel",
			"/home/cameron/code/c/",
			"/home/cameron/code/c/misc",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"(uint32_t)",
			");",
			"08",
			"size_t",
			"uint32_tsi",
			"uint32_t",
			"uint32_tsize",
			"uint32_t",
			"int8_tchar",
			"int8_t",
			"int8_t*",
			"int8_t *",
			"#include \"int.h\"",
			"i32",
			"u32",
			"u21",
			"u16",
			"i16",
			"i8",
			"u8",
			"#include <int.h>",
			"#include <arg.h>",
			"boot.s",
			"SRC_DIR",
			"obj",
			"src",
			"SRC",
			"src",
			"path",
			"target",
			"fputs",
			"vga_vputf",
			"INFO",
			"type",
			"char",
			"vga_info",
			"int",
			"stack",
			"loaded_idt",
			"short",
			"long",
			"ISR_ERROR_CODE",
			"ISR_NO_ERROR_CODE",
			"limit",
			"base",
			"[",
			"]",
			"            ",
			"           ",
			"          ",
			"         ",
			"        ",
			"       ",
			"      ",
			"     ",
			"    ",
			"bootstrap_stack",
			"cli",
			"idt_load",
			"asm_",
			"PIC_ACK",
			"sys/int.h",
			"str",
			"data2",
			"data1",
			"\");\n",
			"outportb",
			"isr_handler",
			"push",
			"COLOR_LIGHT_BLUE",
			"vga_info",
			"char *",
			"mesg",
			"idt_set_entry",
			" (",
			" ",
			"  ",
			"IRQ",
			"num",
			";",
			"=",
			"COLOR_LIGHT_GREY",
			"COLOR_BLACK",
			"COLOR_GREEN",
			"char",
			"vga_color",
			"vga_y",
			"vga_x",
			"enum vga_colors",
			";",
			"int",
			"cpu_state",
			"regs_t",
			"cpu_state_t",
			"idx",
			"outportb",
			"dword",
			"interrupt",
			"pic_acknowledge",
			"PIC2_PORT_A",
			"PIC1_PORT_A",
			");",
			"isr0",
			"load_idt",
			"interrupt_handler",
			"dword",
			"ISR_ERRCODE",
			"ISR_NOERRCODE",
			"isr_error_code",
			"isr_no_error_code",
			"__attribute__((packed))",
			"Push",
			"isr_noerror",
			"isr_error",
			"push",
			"u32",
			"base",
			"num_chars",
			"chars",
			"int",
			";",
			"3",
			"VGA_COMMAND_BYTE_HI",
			"VGA_PORT_DATA",
			"VGA_PORT_COMMAND",
			"VGA_DATA_PORT",
			"VGA_COMMAND_PORT",
			"0x3D5"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": true,
		"regex": false,
		"replace_history":
		[
			"char *",
			"#include <stdint.h>",
			"int32_t",
			"uint32_t",
			"uint16_t",
			"int16_t",
			"int8_t",
			"uint8_t",
			"#include <stdint.h>",
			"",
			"#include <stdarg.h>",
			"int.h",
			"i8 *",
			"idt_set_gate",
			"isr",
			"#include \"common.h\"",
			"u32",
			"i16",
			"i8",
			"i32",
			"u16",
			"u8",
			"io_write",
			"io_read",
			"read_port",
			"write_port",
			"#include \"types.h\"",
			"uint16_t",
			"uint8_t",
			"uin16_t",
			"color",
			"    ",
			"colour",
			"COLOUR",
			"	",
			"\\t",
			"orange",
			"List",
			"self"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 9,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/vga.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4174,
						"regions":
						{
						},
						"selection":
						[
							[
								2715,
								2715
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/kernel.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 528,
						"regions":
						{
						},
						"selection":
						[
							[
								524,
								524
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 51.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "inc/sys/vga.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 985,
						"regions":
						{
						},
						"selection":
						[
							[
								100,
								100
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 612.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/str.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 167,
						"regions":
						{
						},
						"selection":
						[
							[
								109,
								109
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/isr.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 505,
						"regions":
						{
						},
						"selection":
						[
							[
								218,
								218
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "inc/sys/gdt.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 418,
						"regions":
						{
						},
						"selection":
						[
							[
								308,
								308
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/gdt.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 935,
						"regions":
						{
						},
						"selection":
						[
							[
								119,
								119
							]
						],
						"settings":
						{
							"_anf_new": "",
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/gdt.s",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 259,
						"regions":
						{
						},
						"selection":
						[
							[
								259,
								259
							]
						],
						"settings":
						{
							"_anf_new": "",
							"syntax": "Packages/NASM x86 Assembly/Assembly x86.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/idt.s",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1080,
						"regions":
						{
						},
						"selection":
						[
							[
								1076,
								1076
							]
						],
						"settings":
						{
							"syntax": "Packages/NASM x86 Assembly/Assembly x86.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1224.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/idt.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2151,
						"regions":
						{
						},
						"selection":
						[
							[
								1922,
								1922
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 510.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "inc/sys/idt.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1177,
						"regions":
						{
						},
						"selection":
						[
							[
								188,
								188
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 102.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "inc/sys/isr.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 452,
						"regions":
						{
						},
						"selection":
						[
							[
								277,
								277
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 36.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 142.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "kernel.sublime-project",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"boot.s",
				"src/boot.s"
			],
			[
				"vga.h",
				"inc/sys/vga.h"
			],
			[
				"str.c",
				"src/str.c"
			],
			[
				"loader",
				"loader.s"
			],
			[
				"test.py",
				"python/misc/test.py"
			],
			[
				"test",
				"c/test.c"
			],
			[
				"base64",
				"c/base64/test.c"
			],
			[
				"test.c",
				"c/test.c"
			],
			[
				"htable",
				"c/misc/htable.c"
			],
			[
				"",
				"python/school/password.py"
			],
			[
				"pyt",
				"c/linux/drivers/FPU-emu/poly_tan.c"
			],
			[
				"delete",
				"c/linux/include/linux/if_ether.h"
			],
			[
				"htabl",
				"c/misc/htable.c"
			],
			[
				"groove",
				"python/misc/grooveshark_songs.txt"
			],
			[
				"groo",
				"python/misc/grooveshark_songs"
			],
			[
				"load",
				"python/misc/load_gs_queue.py"
			],
			[
				"g",
				"python/misc/grooveshark_songs"
			],
			[
				"wrod",
				"python/misc/word_hashes.txt"
			],
			[
				"string",
				"python/misc/string_match_1.py"
			],
			[
				"tet.py",
				"python/lisp/test.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/code/python/python.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 303.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
